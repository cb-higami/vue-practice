vue オブジェクトを作成

new Vue({
    //div app に対し実施する
	el: '#app',
  data: {
  	message: 'hello world'
  },
  methods: {
  	reverseMessage: function() {
    	this.message = this.message.split('').reverse().join('')
    }
  }
})



テンプレートとは？

以下がテンプレート
テンプレート構文であり、vue がコンパイル→ html 出力される
<div id = "app">
    <p>
        hello {{message}}
    </p>
    <!-- v-xx はディレクティブという -->
    <p v-text="message"></p>
    <button v-on:click= "reverseMessage">
</div>


双方向データバインディング
・上記の場合、js 側で設定した値しか、表示できなかった
　JSのデータ一方向データバインディング？
　対して、インプットダグに入力された値を設定するような動き


computed
    もつプロパティに対し、実行するメソッド？
    スコープ範囲が明確になりそう
    参照先のプロパティの値が変化になった時のみ、computed メソッドが走る
    普通のメソッドであれば、画面内で変化があった時全てに反応する！

リアクティブ
    その値が監視され、変更が検知される状態

     new Vue({
        el: '#app',
        data : {
            message: 'hello'
        }
    })
    各プロパティには watcher があり以下が働く
    値変更を検知（getter?）すると値を書き換え（setter?）
    なのでdata 外にプロパティを追加すると、監視対象となり、値が更新されない

    vue の動作
    ①インスタンス作成時、プロパティに対しwatcher を作成
    ②プロパティの値変更を検知し、DOMを再描画する


vue インスタンスライフサイクル
    ①インスタンス作成
    ②template をrender 関数にコンパイル
    　vm node を作成？
    ③対象のel に対し、DOMを追加

    ④データが変わった
    ⑤DOMを再描画
    　④⑤を繰り返す
